# see https://github.com/rochus-keller/BUSY/

if busy_version < "2022-09-15" {
	error("this version of BUSY is not compatible with this build")
}
 
param HAVE_SHARED   = false  # build the shared library version of NAppGUI (default is static library version)
param HAVE_ALLINONE = false  # in case of HAVE_SHARED compile all functions into one DLL (instead of one per module)

if HAVE_ALLINONE && !HAVE_SHARED {
	HAVE_SHARED = true
}

submod src

# for clients using nappgui
let use_nappgui* = src.use_nappgui

# build and use the nappgui libraries
let nappgui_lib* = src.nappgui_lib
let core_lib* = src.core_lib
let sewer_lib* = src.sewer_lib
let osbs_lib* = src.osbs_lib
let draw2d_lib* = src.draw2d_lib
let geom2d_lib* = src.geom2d_lib
let osgui_lib* = src.osgui_lib
let osapp_lib* = src.osapp_lib
let gui_lib* = src.gui_lib

let all_libs* = src.all_libs # an aggregate incorporating either nappgui_lib or all others

# build and use the nrc utility application of nappgui
let nrc* = src.nrc

let copy_libs : Copy {
	.use_deps += [ `shared_lib `static_lib  ]
	.outputs += ./lib/{{source_file_part}}
	if !HAVE_SHARED {
		.deps += [
			core_lib
			sewer_lib
			osbs_lib
			draw2d_lib
			geom2d_lib
			osgui_lib
			osapp_lib
			gui_lib
		]
		.deps += nappgui_lib
	}else{
		.deps += all_libs
	}
}

# this is the default build which builds everything
let demos ! : Copy {
	.use_deps += `executable;
	.deps += [ copy_libs src.demos ]
	.outputs += ./bin/{{source_file_part}}
}



